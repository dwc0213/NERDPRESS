CREATE TABLE member(
    id          NUMBER(4)	GENERATED BY DEFAULT AS IDENTITY,
    userId      VARCHAR2(10)NOT NULL,
    name        VARCHAR2(10)NOT NULL,
    PW          VARCHAR2(20)NOT NULL,
    email       VARCHAR2(50)NOT NULL,
    birthDate   NUMBER(8)   NOT NULL,
    grade       NUMBER(1)   NOT NULL,
    male        NUMBER(1)   NOT NULL
);

CREATE TABLE novelboard(
    id          NUMBER(4)	    GENERATED BY DEFAULT AS IDENTITY,
    mem_id      NUMBER(4)       NOT NULL,
    name        VARCHAR2(10)    NOT NULL,
    genre       VARCHAR2(10)    NOT NULL,
    recoms       NUMBER(10)      NOT NULL, --추천수
    email       VARCHAR2(50)    NOT NULL,
    dateNTIME  NUMBER(12)       NOT NULL,
    explanation VARCHAR2(100),
    CONSTRAINT fk_mem_id FOREIGN KEY(mem_id) REFERENCES member(id)
);

CREATE TABLE episodes(
    id          NUMBER(4)	GENERATED BY DEFAULT AS IDENTITY,
    novel_id    NUMBER(4)   NOT NULL,
    subtitle    VARCHAR2(20),
    genre       VARCHAR2(10)NOT NULL,
    chapter     NUMBER(3)   NOT NULL,
    dateNTime   NUMBER(12)  NOT NULL,
    Content     VARCHAR2(1000) NOT NULL,
    recoms      NUMBER(5)   NOT NULL, --추천수
    disrecoms   NUMBER(5)   NOT NULL, --비추천수
    isReportedNWhy NUMBER(8) NOT NULL,
    --순서대로 음란물, 성의없음, 욕설 및 분란조장, 기타사유로 구분됨.
    --음란물으로 2번, 성의없음으로 3번 신고되면 02030000으로 저장.
    CONSTRAINT fk_novel_id FOREIGN KEY(novel_id) REFERENCES novelboard(id)
);

CREATE TABLE license(
    License_id NUMBER(4)  GENERATED BY DEFAULT AS IDENTITY,   -- 자격증 ID
    License_type VARCHAR2(100) NOT NULL;                      -- 자격증 종류
);

CREATE TABLE quest(
    Quest_id    NUMBER(4) PRIMARY KEY,                                  -- 문제 ID
    License_id  NUMBER(4) NOT NULL,                                     -- 자격증 ID
    Quest_title VARCHAR2(1000) NOT NULL,                                -- 문제 설명
    Q_one       VARCHAR2(500) NOT NULL,                                 -- 정답 보기 1번
    Q_two       VARCHAR2(500) NOT NULL,                                 -- 정답 보기 2번
    Q_three     VARCHAR2(500) NOT NULL,                                 -- 정답 보기 3번
    Q_four      VARCHAR2(500) NOT NULL,                                 -- 정답 보기 4번
    Quest_answer NUMBER(1) NOT NULL CHECK( Quest_answer IN(1,2,3,4) ),  -- 정답 번호

    CONSTRAINT fk_license_id FOREIGN KEY(License_id) REFERENCES license(License_id)
);
