CREATE TABLE member
(
    id          NUMBER(4)	GENERATED BY DEFAULT AS IDENTITY,
    userId      VARCHAR2(10)NOT NULL,
    name        VARCHAR2(10)NOT NULL,
    PW          VARCHAR2(20)NOT NULL,
    email       VARCHAR2(50)NOT NULL,
    birthDate   NUMBER(8)   NOT NULL,
    grade       NUMBER(1)   NOT NULL,
    male        NUMBER(1)   NOT NULL
);
CREATE TABLE novelboard
(
    id          NUMBER(4)	    GENERATED BY DEFAULT AS IDENTITY,
    mem_id      NUMBER(4)       NOT NULL,
    name        VARCHAR2(10)    NOT NULL,
    genre       VARCHAR2(10)    NOT NULL,
    recoms       NUMBER(10)      NOT NULL, --추천수
    email       VARCHAR2(50)    NOT NULL,
    dateNTIME  NUMBER(12)       NOT NULL,
    explanation VARCHAR2(100),
    CONSTRAINT fk_mem_id FOREIGN KEY(mem_id) REFERENCES member(id)
);
CREATE TABLE episodes
(
    id          NUMBER(4)	GENERATED BY DEFAULT AS IDENTITY,
    novel_id    NUMBER(4)   NOT NULL,
    subtitle    VARCHAR2(20),
    genre       VARCHAR2(10)NOT NULL,
    chapter     NUMBER(3)   NOT NULL,
    dateNTime   NUMBER(12)  NOT NULL,
    Content     VARCHAR(1000) NOT NULL,
    recoms      NUMBER(5)   NOT NULL, --추천수
    disrecoms   NUMBER(5)   NOT NULL, --비추천수
    isReportedNWhy NUMBER(8) NOT NULL,
    --순서대로 음란물, 성의없음, 욕설 및 분란조장, 기타사유로 구분됨.
    --음란물으로 2번, 성의없음으로 3번 신고되면 02030000으로 저장.
    CONSTRAINT fk_novel_id FOREIGN KEY(novel_id) REFERENCES novelboard(id)
);

CREATE TABLE license
(
    License_id number(4) GENERATED BY DEFAULT AS IDENTITY,  -- 자격증 iD
    License_type varchar2(1000) NOT NULL                    -- 자격증 종류
);

CREATE TABLE quest
(
    Quest_id number(4) PRIMARY kEY,                         -- 문제 ID
    License_id number(4) NOT NULL,                          -- 자격증 종류 (FK)
    Quest_title varchar2(1000) NOT NULL,                    -- 문제 설명
    Q_one varchar2(300) NOT NULL,                           -- 정답 보기 1번
    Q_two varchar2(300) NOT NULL,                           -- 정답 보기 2번
    Q_three varchar2(300) NOT NULL,                         -- 정답 보기 3번
    Q_four varchar2(300) NOT NULL,                          -- 정답 보기 4번
    Quest_answer number(1) NOT NULL,                        -- 정답 번호
    CONSTRAINT fk_license_id FOREIGN KEY(License_id) REFERENCES license(License_id)
);
